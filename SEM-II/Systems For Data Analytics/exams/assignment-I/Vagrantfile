# Define variables

VM1 = "mpi-server"
VM2 = "mpi-client"

$pympi = <<SCRIPT
sudo DEBIAN_FRONTEND=noninteractive apt install mpich -y 
#sudo DEBIAN_FRONTEND=noninteractive apt -y install python3-mpi4py
SCRIPT

$installNFSServer = <<SCRIPT
apt install nfs-kernel-server -y
mkdir -p /mnt/mirror
chown -R nobody:nogroup /mnt/mirror
chmod 777 /mnt/mirror/
sed -i -e '$a/mnt/mirror 192.168.56.0/24(rw,sync)' /etc/exports
exportfs -a
systemctl restart nfs-kernel-server.service
SCRIPT

# Install NFS on clients
$installNFSClient = <<SCRIPT
apt install nfs-common -y
mkdir -p /mnt/mirror
SCRIPT

SERVER_IP = "192.168.56.0"

Vagrant.configure("2") do |config|
  config.vm.provider "virtualbox"
  config.vm.define VM1 do |server|
    server.vm.box = "alvistack/ubuntu-22.04"
    server.vm.hostname = VM1
    server.vm.network "private_network", ip: SERVER_IP, hostname: true
    server.vm.provision "UpdateAPT", type: "shell", inline: <<-SCRIPT
    sudo apt update -y && sudo apt upgrade -y
    SCRIPT
    server.vm.provision "InstallMPIPY", type: "shell", run: "once", inline: $pympi
    server.vm.provision "CopySSHKeysP", type: "file", source: "ssh_keys/id_rsa.pub", destination: "/home/vagrant/.ssh/id_rsa.pub"
    server.vm.provision "CopySSHKeys", type: "file", source: "ssh_keys/id_rsa", destination: "/home/vagrant/.ssh/id_rsa"
    server.vm.provision "ConfigSSH", type: "shell", inline: <<-SCRIPT
    cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
    rm -f /home/vagrant/.ssh/id_rsa.pub
    SCRIPT
    server.vm.provision "InstallServerNFS", type: "shell", run: "once", inline: $installNFSServer
    # Copy files into server
    server.vm.provision "CopyServerPy", type: "file", source: "socket_test/server.py", destination: "/home/vagrant/"
    # Copy MPI examples into NFS directory
    server.vm.provision "CopyMPIExample", type: "file", source: "mpi_codes/", destination: "/mnt/mirror/"
  end


  (1..3).each do |i|
  config.vm.define "mpi-client#{i}" do |node|
    node.vm.box = "alvistack/ubuntu-22.04"
    node.vm.hostname = "mpi-client#{i}"
    node.vm.network "private_network", ip: "192.168.56.1#{i}", hostname: true
    node.vm.provision "UpdateAPT", type: "shell", inline: <<-SCRIPT
    sudo apt update -y && sudo apt upgrade -y
    SCRIPT
    node.vm.provision "InstallMPIPY", type: "shell", run: "once", inline: $pympi
    # Install NFS on client
    node.vm.provision "InstallClientNFS", type: "shell", run: "once", inline: $installNFSClient
    # Mount NFS Folder after reboot every time
    node.vm.provision "MountNFS", type: "shell", run: "always", inline: "mount 192.168.56.0:/mnt/mirror /mnt/mirror"
    # Add temporary private and public key to nodes
    node.vm.provision "CopySSHKeysP", type: "file", source: "ssh_keys/id_rsa.pub", destination: "/home/vagrant/.ssh/id_rsa.pub"
    node.vm.provision "CopySSHKeys", type: "file", source: "ssh_keys/id_rsa", destination: "/home/vagrant/.ssh/id_rsa"
    node.vm.provision "ConfigSSH", type: "shell", inline: <<-SCRIPT
    cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
    rm -f /home/vagrant/.ssh/id_rsa.pub
    SCRIPT
    # Copy files into client
    node.vm.provision "CopyClientPy", type: "file", source: "socket_test/client.py", destination: "/home/vagrant/"
  end
 end
end
